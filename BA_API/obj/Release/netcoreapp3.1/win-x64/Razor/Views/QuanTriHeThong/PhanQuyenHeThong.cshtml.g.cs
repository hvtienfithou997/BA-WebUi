#pragma checksum "D:\BA_Work\BA_API\BA_API\Views\QuanTriHeThong\PhanQuyenHeThong.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "adbb52367a36d2b4cafe8779e3a35b06037d2a36"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_QuanTriHeThong_PhanQuyenHeThong), @"mvc.1.0.view", @"/Views/QuanTriHeThong/PhanQuyenHeThong.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\BA_Work\BA_API\BA_API\Views\_ViewImports.cshtml"
using BA_API;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\BA_Work\BA_API\BA_API\Views\_ViewImports.cshtml"
using BA_API.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"adbb52367a36d2b4cafe8779e3a35b06037d2a36", @"/Views/QuanTriHeThong/PhanQuyenHeThong.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c3bfb59427742d22d27d0c529a835ce80d09517b", @"/Views/_ViewImports.cshtml")]
    public class Views_QuanTriHeThong_PhanQuyenHeThong : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\BA_Work\BA_API\BA_API\Views\QuanTriHeThong\PhanQuyenHeThong.cshtml"
  
    ViewData["Title"] = "Phân quyền hệ thống";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .hiddenRow {
        padding: 0 !important;
    }

    .check-right {
        float: right;
    }
</style>

<!-- Khu vực tìm kiếm -->
<div class=""col-xl-12 col-lg-12"">
    <div class=""card mb-4"">
        <div class=""card-header py-3 d-flex flex-row align-items-center justify-content-between"">
            <h6 class=""m-0 font-weight-bold text-primary"">
                Tra cứu thông tin
            </h6>
        </div>
        <div class=""card-body"">
            <div class=""row"">
                <div class=""form-group col-xl-4 col-lg-6"">
                    <label for=""term"">Tên nhóm người dùng</label>
                    <select class=""form-control"" id=""inputRole"" placeholder=""Chọn nhóm người dùng"">
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "adbb52367a36d2b4cafe8779e3a35b06037d2a364434", async() => {
                WriteLiteral("Chọn nhóm người dùng");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </select>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-xl-12 text-center"">
                    <button type=""submit"" name=""btn-update"" class=""btn btn-info"" style=""margin: auto"">Cập nhật phân quyền</button>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Hiển thị dữ liệu-->
<div class=""col-xl-12 col-lg-12"">
    <div class=""card mb-4"">
        <div class=""card-header py-3 d-flex flex-row align-items-center justify-content-between"">
            <h6 class=""m-0 font-weight-bold text-primary"">Danh sách nhóm người dùng</h6>
        </div>
        <div id=""rolee""></div>

        <nav aria-label=""Page navigation"">
            <ul class=""pagination""></ul>
        </nav>
    </div>
</div>

<script>

    $(function() {
        addClassActive(""category-QUAN_TRI_HE_THONG"", ""QUAN_TRI_HE_THONG_PHAN_QUYEN"");
    });
    $(""#inputRole"").change(function (e) {
        e.preventDefaul");
            WriteLiteral(@"t();
        let p = $(this).val();
        menuShow(p);

    });


    callApi(`${REP_URL}roles?name=`, null, ""GET"", function (item) {
        let res = ` <option value=""-1"">Chọn nhóm người dùng</option>`;
        item.forEach(function (pro) {
            res += ` <option value=""${pro.id}"">${pro.name}</option>`;
        });
        $(""#inputRole"").html(res);
    });

    var listCheck = [];
    $(""[name='btn-update']"").click(function () {
        let role = $(""#inputRole"").val();

        if (role === ""-1"") {
            $.notify(""Bạn chưa chọn nhóm người dùng"", ""error"");
            return;
        }

        listCheck = [];
        $(`input[name^='menu-level-']:checked`).each(function () {
            listCheck.push($(this).val());
        });
        callApi(`${REP_URL}roles/${role}/features`, listCheck, ""POST"", function (item) {
            $.notify(""Cập nhật thành công"", ""success"");
            menuShow(role);
        });

    });


    function orderRole() {
       ");
            WriteLiteral(@" callApi(`${REP_URL}roles/2/features`, null, ""GET"", function (item) {
            let html = ``;
            let arr = [];
            let arrChild = [];
            item.forEach((res) => {
                if (res.featureParentId === 0)
                    arr.push(res);
                else
                    arrChild.push(res);
            });

            let stt = 1;
            arr.forEach((parent) => {
                html += `<tr data-toggle=""collapse"" data-target=""#row-${stt}"" class=""accordion-toggle"">`;
                if (parent.featureId === 1 || parent.featureId === 33)
                    html += `<td class=""""></td>`;
                else
                    html += `<td class=""""><i class=""fas fa-chevron-down fa-fw""></i></td>`;
                html += `<td class=""text-left"">${parent.name}</td>`;
                html += `<td class=""text-left"">${parent.code}</td>`;
                html += `<td><input type='checkbox'/></td>`;
                arrChild.forEach((child) => {
     ");
            WriteLiteral(@"               if (child.featureParentId === parent.featureId) {
                        html += `</tr>`;
                        html += `<tr><td colspan=""12"" class=""hiddenRow""><div class=""accordian-body collapse"" id=row-${stt}>`;
                        html += `<table class=""table table-striped"">`;
                        html += `<tbody><tr data-toggle=""collapse"" class=""accordion-toggle"" data-target=""#row-${stt + 10}"">`;
                        html += `<td class=""""></td>`;
                        html += `<td class=""text-left""><i class=""fas fa-chevron-down fa-fw""></i> ${child.name}</td>`;
                        html += `<td class=""text-left"">${child.code}</td>`;
                        html += `<td><input type='checkbox'/></td>`;
                        html += ` </tr></tbody>`;
                        html += ` </table>`;
                        item.forEach((child3) => {
                            if (child3.featureParentId === child.featureId) {
                                html += `");
            WriteLiteral(@"</div></td></tr>`;
                                html += `<tr><td colspan=""12"" class=""hiddenRow""><div class=""accordian-body collapse"" id=row-${stt + 10}>`;
                                html += `<table class=""table table-striped""><tbody><tr>`;
                                html += `<td class=""text-left""></td>`;
                                html += `<td class=""text-left"">${child3.name}</td>`;
                                html += `<td class=""text-left"">${child3.code}</td>`;
                                html += `<td><input type='checkbox'/></td>`;
                                html += ` </tr></tbody>`;
                                html += ` </table>`;
                                html += `</div></td></tr>`;
                            }
                        });
                    }
                });
                stt++;
            });
            $(""#rolee"").html(html);
        });
    }

    function menuShow(role) {
        callApi(`${REP_URL}roles/${role}/f");
            WriteLiteral(@"eatures`, null, ""GET"", function (item) {
            let html = ``;
            let arr = [];
            let arrChild = [];
            item.forEach((res) => {
                if (res.featureParentId === 0)
                    arr.push(res);
                else
                    arrChild.push(res);
            });
            let stt = 1;

            html += `<ul class='list-group'>`;
            arr.forEach((parent) => {
                html += `<li class=""list-group-item"">${stt} - ${parent.name} <input type=""checkbox"" class='menu-level-1 check-right' name=""menu-level-1"" value='${parent.featureId}'><ul class='list-group'>`;
                let sttChild = 1;
                arrChild.forEach((child) => {
                    if (child.featureParentId === parent.featureId) {
                        html += `<li class=""list-group-item list-group-item-action"">${stt}.${sttChild} - ${child.name} <input type=""checkbox"" name=""menu-level-2"" class='menu-level-2 check-right' value='${child.featureI");
            WriteLiteral(@"d}'>`;
                        html += `<ul class='list-group'>`;
                        item.forEach((child3) => {
                            if (child3.featureParentId === child.featureId) {
                                html += `<li class=""list-group-item list-group-item-action"">${child3.name} <input type=""checkbox"" class='menu-level-3 check-right' name=""menu-level-3"" value='${child3.featureId}'></li>`;
                            }
                        });
                        html += `</ul></li>`;
                        sttChild++;
                    }
                });
                html += `</ul></li>`;
                stt++;
            });
            html += `</ul>`;

            $(""#rolee"").html(html);

            if (item.length > 0) {
                for (var i = 0; i < item.length; i++) {
                    if (item[i].isAllow)
                        $(`input[name^='menu-level-'][value='${item[i].featureId}']`).prop('checked', true);
                }
  ");
            WriteLiteral(@"          }

        });
    }

    $(document).on('click', "".menu-level-1"", function () {
        var _parent = $(this); //input hiện tại
        var nextChildren = $(this).next(""ul"").children();//input con bên trong
        if (_parent.prop('checked')) {
            nextChildren.each(function () {
                $(this).children().prop('checked', true);
                let item = $(this).children().children();
                item.each(function () {
                    $(this).children().prop('checked', true);
                });
            });

        } else {
            nextChildren.each(function () {
                $(this).children().prop('checked', false);
                let item = $(this).children().children();
                item.each(function () {
                    $(this).children().prop('checked', false);
                });
            });
        }
    });

    $(document).on('click', "".menu-level-2"", function () {
        var _parent = $(this); //input hiện ");
            WriteLiteral(@"tại
        var nextChildren = $(this).next(""ul"").children();//input con bên trong
        if (_parent.prop('checked')) {
            nextChildren.each(function () {
                $(this).children().prop('checked', true);
                $(this).parent().parent().parent().parent().children().prop('checked', true);
            });

        } else {
            nextChildren.each(function () {
                $(this).children().prop('checked', false);
                //$(this).parent().parent().parent().parent().children().prop('checked', false);
            });
        }
    });

    $(document).on('click', "".menu-level-3"", function () {
        var _parent = $(this); //input hiện tại
        var nextChildren = $(this).next(""ul"").children(); //input con bên trong
        if (_parent.prop('checked')) {
            let item = $(this).parent().parent().parent();
            item.children().prop('checked', true);
            item.parent().parent().children().prop('checked', true);

       ");
            WriteLiteral(" } else {\r\n\r\n        }\r\n    });\r\n\r\n\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
